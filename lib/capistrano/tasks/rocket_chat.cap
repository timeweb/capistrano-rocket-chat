require 'httparty'

before 'deploy:updating', 'rocket_chat_notify:updating'
before 'deploy:reverting', 'rocket_chat_notify:reverting'
after 'deploy:finishing', 'rocket_chat_notify:updated'
after 'deploy:finishing_rollback', 'rocket_chat_notify:reverted'
after 'deploy:failed', 'rocket_chat_notify:failed'

namespace :rocket_chat_notify do
  desc 'Notify rocket-chat on start of updating'
  task :updating do |task|
    on roles(:all) do |host|
      notify(:updating)
    end
  end

  desc 'Notify rocket-chat on start of rollback'
  task :reverting do |task|
    on roles(:all) do |host|
      notify(:reverting)
    end
  end
  
  desc 'Notify rocket-chat on finish of deployment'
  task :updated do |task|
    on roles(:all) do |host|
      notify(:updated)
    end
  end  
  
  desc 'Notify rocket-chat on finish of rollback'
  task :reverted do |task|
    on roles(:all) do |host|
      notify(:reverted)
    end
  end  
  
  desc 'Notify rocket-chat on fail of deployment'
  task :failed do |task|
    on roles(:all) do |host|
      notify(:failed)
    end
  end
end

def get_config_vars()
  return {
    rocket_chat_url: fetch(:rocket_chat_webhook_url),
    application: fetch(:application),
    branch: fetch(:branch),
    repo_url: fetch(:repo_url),
    stage: fetch(:stage),
    deploy_to: fetch(:deploy_to),
    rails_env: fetch(:rails_env),
    scm: fetch(:scm),
    log_level: fetch(:log_level),
    local_user: @task.local_user,
    server: {
      name: @host.hostname,
      user: @host.user
    }
   }
end

def notify(event_hook)

  config = get_config_vars

  raise "\n\nERROR::ROCKET-CHAT-TASK: config option 'rocket_chat_webhook_url' is not set\n\n" unless config[:rocket_chat_url]
  
  notification_text = "#{event_hook} deployment to '#{config[:server][:name]}' on branch '#{config[:branch]}' to stage '#{config[:stage]}'"

  request_body = {
    event: {
      hook: event_hook,
      text: notification_text
    },
    attributes: config
  }

  HTTParty.post("#{config[:rocket_chat_url]}", body: request_body).body 
end

